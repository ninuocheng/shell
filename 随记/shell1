条件测试的基本用法
使用"test 表达式"或者[ 表达式 ]都可以,表达式两边至少要留一个空格
条件测试操作本身不显示出任何信息,测试的条件是否成立主要体现在命令执行后的返回状态(即$i),所以可以在测试后查看变量$?的值来做出判断,或者结合&&、||等逻辑操作显示出结果(或作其他操作)
字符串测试
==比较两个字符串是否相同
检查当前用户是否为root
[ $USER == root ]    //测试
echo $?              //查看结果0为对,非0为错
!=比较两个字符串是否不相同
[ $USER != root ]
一行执行多条命令的情况
A && B 仅当A命令执行成功,才执行B命令
A || B 仅当A命令执行失败,才执行B命令
A ; B  执行A命令后执行B命令,两者没有逻辑关系
-z检查变量的值是否未设置(空值)
var1=nb;var2=""
[ -z $var1 ] && echo "空值" ||  echo "非空值"
[ ! -z $var2 ] && echo "非空值"  || echo "空值"
-n也可以测试变量是否不为空(相当于! -z)
-eq比较两个数是否相等
x=20 定义一个测试变量
[ $x -eq 20 ] && echo "相等" || echo "不相等"
[ $x -eq 30 ] && echo "相等" || echo "不相等"
-ne比较两个数是否不相等
[ $x -ne 20 ] && echo "不等于" || echo "等于"
-gt比较前面的整数是否大于后面的整数
-ge比较前面的整数是否大于或等于后面的整数
-lt比较前面的整数是否小于后面的整数
-le比较前面的整数是否小于或等于后面的整数
提取当前登录的用户数,比较是否大于等于3
n=`who | wc -l`或n=$(who | wc -l) 命令执行的结果赋值给变量n
[ $n -ge 3 ] && echo "大于等于3" || echo "小于3"
-e判断对象是否存在(不管是目录还是文件)
[ -e /usr ] && echo "存在" || echo "不存在"
-d判断对象是否为目录(存在且是目录)
[ -d /etc/fstab ] && echo "是目录" || echo "不是目录"
-f判断对象是否为文件(存在且是文件)
[ -f /usr ] && echo "是文件" || echo "不是文件"
-r判断对象是否有可读权限
无论文件是否设置r权限,超级管理员root都可读
cp /etc/hosts /tmp/test.txt 复制一个文件测试
chmod -r /tmp/test.txt   去掉r权限
[ -r /tmp/test.txt ] && echo "可读" || echo "不可读"  //root测试结果仍然可读
如切换为普通用户,在执行相同的测试,结果变为"不可读"
-w判断对象是否有可写权限
同样是无论文件是否设置w权限,root都可写
-x判断对象是否具有可执行权限
这个取决于文件本身、文件系统的控制,root或普通用户都适用
&& 逻辑与
给定条件必须成立,整个测试结果才真
检查变量x的值是否大于10,且小于30
x=20 定义变量x的值为20
[ $x -gt 10 ] && [ $x -lt 30 ] && echo "yes"
|| 逻辑或
只要其中一个条件成立,则整个测试结果为真
只要/tmp、/var/spool目录中有一个可写,则条件成立
[ -w /tmp ] || [ -w /var/spool ] && echo "ok"



